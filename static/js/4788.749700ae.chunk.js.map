{"version":3,"file":"static/js/4788.749700ae.chunk.js","mappings":"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","sources":["Utils/Utils.js","views/dashboard/DashboardData.js","views/datatable/DatatableMain.js","views/dashboard/Dashboard.js","views/datatable/ViewDetails.js","views/widgets/WidgetsDropdown.js"],"sourcesContent":["import axios from \"axios\";\nimport Swal from 'sweetalert2';\n\n\n\nconst userData = JSON.parse(localStorage.getItem(\"userDataStore\"));\nlet counter = 1000;\n\nexport function getSessionTimeout(){ \n    try {\n        \n    if(userData){\n        let x = setInterval(function() {\n            const currentUser_new = JSON.parse(localStorage.getItem(\"userDataStore\"));\n            let now = new Date().getTime();\n            let distance = new Date(currentUser_new?.timeLogout).getTime() - now;\n            let seconds = Math.floor((distance % (1000 * 60)) / 1000);\n            // console.log( \" <> \", currentUser_new?.counter);\n            // console.log(distance \" <> \", seconds);\n\n            if(distance < 5742 ){\n              Swal.fire({\n                  icon: 'error',\n                  title: 'Signing you out in ' + (seconds < 1 ? 0 : seconds) + 's.',\n                  toast: true,\n                  position: 'top-end',\n                  showConfirmButton: false,\n                  timer: 3000,\n                  timerProgressBar: true,\n                  closeOnConfirm: false\n              })\n            }\n            if (distance < 1) {\n            clearInterval(x);\n              setTimeout(function () {\n                window.location.href = \"/login\";\n              }, 100);\n            \n            // localStorage.removeItem(\"userDataStore\")\n            localStorage.clear()\n            }\n        }, 1000);\n    }\n    } catch (error) {\n        \n    }\n\n   \n    // function trackActivity(){ \n    //     // e.preventDefault();\n    //     const currentUser_new = JSON.parse(localStorage.getItem(\"userData\")) || [];    \n    //     currentUser_new[\"timeLogout\"] = new Date().getTime() + counter;\n    //     localStorage.setItem('userData', JSON.stringify(currentUser_new));\n    \n    // }\n\n    // return{\n    //     \"getSessionTimeout\": trackActivity()\n    // }\n    \n}","import axios from \"axios\";\n\n\n\nconst userData = JSON.parse(localStorage.getItem(\"userDataStore\"));\n\nexport function getTransactionData(){\n\n    // /939e8b7b-ce5c-421f-b635-a88dc14fcb32/ \n    let data = '';\n    let config_transaction = {\n        method: 'get',\n        url: process.env.REACT_APP_BASE_API + \"/transaction/historyByBusiness/\" + userData?.account + \"/\",\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + userData?.access\n        },\n        data: data\n    };\n\n    function transactionDetails(){\n        return axios(config_transaction).then(response => {\n            // // console.log(\"data ==\", response?.data);\n            if (response.status === 200) {\n                // \n                return response.data;\n            }\n            return\n\n        }).catch(function (error) {\n\n            if (error.response) {\n                // // console.log(\"==\");\n                /*\n                * The request was made and the server responded with a\n                * status code that falls out of the range of 2xx\n                */\n\n            } else if (error.request) {\n                /*\n                * The request was made but no response was received, `error.request`\n                * is an instance of XMLHttpRequest in the browser and an instance\n                * of http.ClientRequest in Node.js\n                */\n\n            } else {\n                // Something happened in setting up the request and triggered an Error\n\n            }\n        }\n        );\n\n    }\n\n\n    let config_transaction_summary_client = {\n        method: 'get',\n        url: process.env.REACT_APP_BASE_API + \"/transactions/collections/stats/\" + userData?.account + \"/\",\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + userData?.access\n        },\n        data: data\n    };\n    function transactionSummary(){\n        return axios(config_transaction_summary_client).then(response => {\n            // console.log(\"data ==\", response?.data);\n            if (response.status === 200) {\n                // \n                return response.data;\n            }\n            return\n\n        }).catch(function (error) {\n\n            if (error.response) {\n                // // console.log(\"==\");\n                /*\n                * The request was made and the server responded with a\n                * status code that falls out of the range of 2xx\n                */\n\n            } else if (error.request) {\n                /*\n                * The request was made but no response was received, `error.request`\n                * is an instance of XMLHttpRequest in the browser and an instance\n                * of http.ClientRequest in Node.js\n                */\n\n            } else {\n                // Something happened in setting up the request and triggered an Error\n\n            }\n        }\n        );\n\n    }\n \n    \n    return {\n        \"transaction\": transactionDetails(),\n        \"summary\": transactionSummary()\n    }\n}","import React, { useEffect, useState } from 'react'\nimport $ from 'jquery'\nimport \"jquery/dist/jquery.min.js\";\nimport \"datatables.net-dt/js/dataTables.dataTables\";\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\";\nimport \"datatables.net-buttons/js/dataTables.buttons.js\";\nimport \"datatables.net-buttons/js/buttons.colVis.js\";\nimport \"datatables.net-buttons/js/buttons.flash.js\";\nimport \"datatables.net-buttons/js/buttons.html5.js\";\nimport \"datatables.net-buttons/js/buttons.print.js\";\nimport './table.css';\nimport Stack from '@mui/material/Stack';\nimport TextField from '@mui/material/TextField';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { TimePicker } from '@mui/x-date-pickers/TimePicker';\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\nimport { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker';\nimport { MobileDatePicker } from '@mui/x-date-pickers/MobileDatePicker';\nimport moment from 'moment';\nimport {\n  CBadge,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CLink,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CPopover,\n  CRow,\n  CTooltip,\n} from '@coreui/react'\nimport { getTransactionData } from '../dashboard/DashboardData';\nimport { cilX, cilCheckCircle } from '@coreui/icons';\nimport ViewDetails from './ViewDetails';\nimport CIcon from '@coreui/icons-react';\nimport Avatar from '@mui/material/Avatar';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Box from '@mui/material/Box';\n\nlet transactionData = getTransactionData();\nlet transaction = []\ntransactionData?.transaction?.then(value => { (transaction = value) } );\n\nconst DatatableMain = (transactionDetails) => {\n  const [loader, setLoader] = useState('<div class=\"spinner-border dashboard-loader\" style=\"color: #e0922f;\"></div>')\n  const [tableData, setTableData] = useState([]);\n  const [monitaState, setMonitaState] = useState(1);\n\n  // date time\n  const [dateTo, setDateTo] = useState(new Date('2014-08-18T21:11:54'));\n  const [dateFrom, setDateFrom] = useState(new Date('2014-08-18T21:11:54'));\n\n  // modals\n  // filer transaction\n  const [modal1, setModal1] = useState(false)\n  // view single transaction \n  const [modal2, setModal2] = useState(false)\n\n  const [viewData, setViewData] = useState({})\n  useEffect(() => {\n    \n    if(transaction?.length > 0 && monitaState === 1){\n      setMonitaState(2)\n      datatablaScript(transaction);\n\n      setLoader('<a></a>')\n    }\n    else{\n      setTimeout(()=> {\n        // \n        setLoader('<a></a>')\n      }, 4000);\n    }\n    // console.log(\"props \", transaction)\n  }, [transaction])\n\n  // perform filter \n  function datatablaScript(tdata) {\n    let printCounter = 0;\n\n    // setTableData(tdata?.filter((post, id)=>{return id < 5}));\n    $('#myTable').DataTable().destroy();\n\n    setTimeout(()=>{\n\n      $('#myTable').DataTable(\n        {\n          // data: transaction,\n          columnDefs: [\n            { \"width\": \"10%\", \"targets\": 2 }\n          ],\n          processing: true,\n          deferLoading: true,\n          keys: true,\n          // dom: 'Blfrtip',\n          paging: false,\n          searching: false,\n          // \"dom\": 't<\"bottom\"if><\"clear\">',\n          // scrollY: 200,\n          deferRender: false,\n          scroller: false,\n  \n        }\n      );\n    }, 0);\n  }\n  \n  function getFilterData(e){\n    // \n    e.preventDefault();\n    // console.log(\"post tableData \", tableData);\n    // transaction = posts;\n    try {\n      // setTableData(posts);\n      let newFilterData = transactionDetails?.transactionDetails.filter((post)=> { return moment(post.created_at).format('LLLL') <= moment(dateFrom).format('LLLL') })\n      // // console.log(\"post tableData \", transactionDetails?.transactionDetails);\n      // console.log(\"post tableData \", newFilterData);\n      datatablaScript(newFilterData);\n      setModal1(false)\n    } catch (error) {\n    }\n  }\n  \n  const handleChangeTo = (newValue) => {\n    setDateTo(newValue);\n  };\n  const handleChangeFrom = (newValue) => {\n    setDateFrom(newValue);\n  };\n  function printContent(){\n      let w=window.open();\n\n      $(\".bg-text-wp\").css(\"background-color\", \"#0a0463\");\n      $(\".bg-text-wp\").css(\"color\", \"#fff\");\n      $(\".bg-text-wp\").css(\"text-align\", \"center\");\n      $(\".icon-wp\").css(\"border-radius\", \"100%\");\n      $(\".icon-wp\").css(\"width\", \"15%\");\n      $(\".viewDescription\").css(\"font-size\", \"1.2rem\");\n      // $(\".viewDescription\").css(\"box-shadow\", \"0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)\");\n      $(\".viewDescription\").css(\"font-family\", \"Roboto\",\"Helvetica\",\"Arial\", \"sans-serif\");\n      $(\".viewDescription\").css(\"font-weight\", \"400\");\n      $(\".viewDescription\").css(\"font-size\", \"0.875rem\");\n      $(\".viewDescription\").css(\"line-height\", \"1.43\");\n      $(\".viewDescription\").css(\"letter-spacing\", \"0.01071em\");\n      $(\".viewDescription\").css(\"padding\", \"8px\");\n      // $(\".viewDescription\").css(\"max-width\", \"50%\");\n      $(\".viewDescription\").css(\"flex-basis\", \"50%\");\n      \n      w.document.write($('.contentForTransactionPrint').html());\n      w.print();\n      w.close();\n  }\n  return (\n    <div>\n      {/* open modal for filter date range */}\n      {/* <CButton onClick={() => setModal1(!modal1)} icon={cilArrowRight} className=\"float-end\" >Filter</CButton> */}\n      <br /><br />\n\n\n      {/* {dateTo.toString()}{\" rrr \"}{dateFrom.toString()} */}\n\n      <table id=\"myTable\" className=\"display\" style={{ width: '100%' }}>\n        <thead>\n          <tr>\n            <th>No.</th>\n            <th>Reference</th>\n            <th>Note</th>\n            <th>Status</th>\n            <th>Transaction Date</th>\n            <th>Amount</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n                          \n        <tbody>\n          {\n            tableData?.map((post, id) => \n              <tr key={id}>\n                <td>{id + 1}</td>\n                <td>{post.reference_id}</td>\n                <td>{post.note}</td>\n                <td><CBadge color={post.status_code === \"SUCCESSFUL\" ? \"success\" : (post.status_code === \"PENDING\" ? \"primary\" : (post.status_code === \"REVERSED\" ? \"danger\" : \"secondary\") )}>{post.status_code}</CBadge> </td>\n                <td>{moment(post.created_at).format('LLLL')}</td>\n                <td>{post.amount}</td>\n                <td onClick={()=>{setModal2(true); setViewData(post)}}><CBadge className='bg-text-wp'>View</CBadge></td>\n              </tr>            \n          )}\n          {/* <tr>\n            <td>Tiger Nixon</td>\n            <td>System Architect</td>\n            <td>Edinburgh</td>\n            <td>61</td>\n            <td>2011-04-25</td>\n            <td>$320,800</td>\n          </tr> */}\n        </tbody>\n      </table>\n      {tableData?.length > 0 ? \"\" : <p style={{textAlign: \"center\"}}> <br /><br /> No data</p>}\n      <a dangerouslySetInnerHTML={{ __html: loader }}></a>\n\n      {/* modals */}\n      {/* modal for filter date range */}\n      <CModal visible={modal1} alignment=\"center\" scrollable backdrop=\"static\" fullscreen='md' onClose={() => setModal1(false)}>\n        <CModalHeader>\n          <CModalTitle> Filter </CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n        \n          <LocalizationProvider dateAdapter={AdapterDateFns}>\n          <Stack spacing={3}>\n          <DateTimePicker\n            label=\"From\"\n            inputFormat=\"dd/MM/yyyy hh:mm:ss\"\n            value={dateTo}\n            onChange={handleChangeTo}\n            renderInput={(params) => <TextField {...params} />}\n          />\n          <DateTimePicker\n            label=\"To\"\n            inputFormat=\"dd/MM/yyyy hh:mm:ss\"\n            value={dateFrom}\n            onChange={handleChangeFrom}\n            renderInput={(params) => <TextField {...params} />}\n          />\n          </Stack>\n          </LocalizationProvider>\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"secondary\" className='text-white' onClick={() => setModal1(false)}>\n            Close\n          </CButton>\n          <CButton color=\"\" className='text-white bg-text-wp'  onClick={(e)=>getFilterData(e)}> Apply</CButton>\n        </CModalFooter>\n      </CModal>\n\n      {/* modal for filter date range */}\n      <CModal visible={modal2} scrollable backdrop=\"static\" fullscreen=\"xl\" onClose={() => setModal2(false)}>\n        <CModalHeader>\n          <CModalTitle>  </CModalTitle>\n        </CModalHeader>\n        <CModalBody className='contentForTransactionPrint'>\n          <p className=\"success rounded\" style={{textAlign: \"center\"}} > \n            <h2> Transaction Details </h2>\n            <CIcon icon={cilCheckCircle} className=\"bg-text-wp icon-wp\" width=\"15%\"/>\n          </p>\n          \n          {/* view only data for transaction */} \n          <ViewDetails viewData={viewData} />        \n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"secondary\" className='text-white' onClick={() => setModal2(false)}>\n            Close\n          </CButton>\n          <CButton className='text-white bg-text-wp' onClick={() => printContent()}>\n            Print\n          </CButton>\n          \n        </CModalFooter>\n      </CModal>\n    </div>\n  )\n}\n\nexport default DatatableMain\n","import React, { useEffect, useState } from 'react'\n\nimport {\n  CAvatar,\n  CButton,\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CProgress,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport { CChartLine } from '@coreui/react-chartjs'\nimport { getStyle, hexToRgba } from '@coreui/utils'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cibCcAmex,\n  cibCcApplePay,\n  cibCcMastercard,\n  cibCcPaypal,\n  cibCcStripe,\n  cibCcVisa,\n  cibGoogle,\n  cibFacebook,\n  cibLinkedin,\n  cifBr,\n  cifEs,\n  cifFr,\n  cifIn,\n  cifPl,\n  cifUs,\n  cibTwitter,\n  cilCloudDownload,\n  cilPeople,\n  cilUser,\n  cilUserFemale,\n} from '@coreui/icons'\n\nimport moment from 'moment';\n\nimport avatar1 from 'src/assets/images/avatars/1.jpg'\nimport avatar2 from 'src/assets/images/avatars/2.jpg'\nimport avatar3 from 'src/assets/images/avatars/3.jpg'\nimport avatar4 from 'src/assets/images/avatars/4.jpg'\nimport avatar5 from 'src/assets/images/avatars/5.jpg'\nimport avatar6 from 'src/assets/images/avatars/6.jpg'\n\n// import WidgetsBrand from '../widgets/WidgetsBrand'\nimport WidgetsDropdown from '../widgets/WidgetsDropdown'\nimport Datatable from '../datatable/DatatableMain'\nimport { getTransactionData } from './DashboardData'\nimport { getSessionTimeout } from '../../Utils/Utils';\n\nconst Dashboard = () => {\n  const [transactionDetails, setTransactionDetails] = useState(null)\n  const [summaryDetails, setSummaryDetails] = useState(null)\n\n  useEffect(() => {\n    // \n    let transactionData = getTransactionData();\n    transactionData?.transaction?.then(value => { setTransactionDetails(value) });\n    trackActivity();\n\n    let summaryData = getTransactionData();\n    summaryData?.summary?.then(value => { setSummaryDetails(value) });\n\n  }, [])\n  // // console.log(\"summarry \", summaryDetails)\n\n  const random = (min, max) => Math.floor(Math.random() * (max - min + 1) + min)\n\n  const progressExample = [\n    { title: 'Total', value: '29', percent: 40, color: 'success' },\n    { title: 'Unique', value: '24', percent: 20, color: 'info' },\n    // { title: 'Pageviews', value: '78.706 Views', percent: 60, color: 'warning' },\n    // { title: 'New Users', value: '22.123 Users', percent: 80, color: 'danger' },\n    // { title: 'Bounce Rate', value: 'Average Rate', percent: 40.15, color: 'primary' },\n  ]\n\n  const progressGroupExample1 = [\n    { title: 'Monday', value1: 34, value2: 78 },\n    { title: 'Tuesday', value1: 56, value2: 94 },\n    { title: 'Wednesday', value1: 12, value2: 67 },\n    { title: 'Thursday', value1: 43, value2: 91 },\n    { title: 'Friday', value1: 22, value2: 73 },\n    { title: 'Saturday', value1: 53, value2: 82 },\n    { title: 'Sunday', value1: 9, value2: 69 },\n  ]\n\n  const progressGroupExample2 = [\n    { title: 'Male', icon: cilUser, value: 53 },\n    { title: 'Female', icon: cilUserFemale, value: 43 },\n  ]\n\n  const progressGroupExample3 = [\n    { title: 'Organic Search', icon: cibGoogle, percent: 56, value: '191,235' },\n    { title: 'Facebook', icon: cibFacebook, percent: 15, value: '51,223' },\n    { title: 'Twitter', icon: cibTwitter, percent: 11, value: '37,564' },\n    { title: 'LinkedIn', icon: cibLinkedin, percent: 8, value: '27,319' },\n  ]\n\n  const tableExample = [\n    {\n      avatar: { src: avatar1, status: 'success' },\n      user: {\n        name: 'Yiorgos Avraamu',\n        new: true,\n        registered: 'Jan 1, 2021',\n      },\n      country: { name: 'USA', flag: cifUs },\n      usage: {\n        value: 50,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'success',\n      },\n      payment: { name: 'Mastercard', icon: cibCcMastercard },\n      activity: '10 sec ago',\n    },\n    {\n      avatar: { src: avatar2, status: 'danger' },\n      user: {\n        name: 'Avram Tarasios',\n        new: false,\n        registered: 'Jan 1, 2021',\n      },\n      country: { name: 'Brazil', flag: cifBr },\n      usage: {\n        value: 22,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'info',\n      },\n      payment: { name: 'Visa', icon: cibCcVisa },\n      activity: '5 minutes ago',\n    },\n    {\n      avatar: { src: avatar3, status: 'warning' },\n      user: { name: 'Quintin Ed', new: true, registered: 'Jan 1, 2021' },\n      country: { name: 'India', flag: cifIn },\n      usage: {\n        value: 74,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'warning',\n      },\n      payment: { name: 'Stripe', icon: cibCcStripe },\n      activity: '1 hour ago',\n    },\n    {\n      avatar: { src: avatar4, status: 'secondary' },\n      user: { name: 'Enéas Kwadwo', new: true, registered: 'Jan 1, 2021' },\n      country: { name: 'France', flag: cifFr },\n      usage: {\n        value: 98,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'danger',\n      },\n      payment: { name: 'PayPal', icon: cibCcPaypal },\n      activity: 'Last month',\n    },\n    {\n      avatar: { src: avatar5, status: 'success' },\n      user: {\n        name: 'Agapetus Tadeáš',\n        new: true,\n        registered: 'Jan 1, 2021',\n      },\n      country: { name: 'Spain', flag: cifEs },\n      usage: {\n        value: 22,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'primary',\n      },\n      payment: { name: 'Google Wallet', icon: cibCcApplePay },\n      activity: 'Last week',\n    },\n    {\n      avatar: { src: avatar6, status: 'danger' },\n      user: {\n        name: 'Friderik Dávid',\n        new: true,\n        registered: 'Jan 1, 2021',\n      },\n      country: { name: 'Poland', flag: cifPl },\n      usage: {\n        value: 43,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'success',\n      },\n      payment: { name: 'Amex', icon: cibCcAmex },\n      activity: 'Last week',\n    },\n  ]\n\n\n  function trackActivity() {\n    // e.preventDefault();\n    getSessionTimeout();\n    const currentUser_new = JSON.parse(localStorage.getItem(\"userDataStore\"));\n    if (currentUser_new) {\n      currentUser_new[\"timeLogout\"] = new Date().getTime() + currentUser_new?.counter;\n      localStorage.setItem('userDataStore', JSON.stringify(currentUser_new))\n    }\n  }\n\n  window.onclick = function (event) {\n    // event.preventDefault()\n    trackActivity()\n  }\n\n  return (\n    <>\n      {/* Transaction  */}\n      {/* <WidgetsDropdown /> */}\n      {/* <WidgetsBrand withCharts /> */}\n\n      <CRow className='m-0' style={{width: \"100%\"}}>\n        <CCol xs={12} sm={12} md={9} xl={9} style={{ float: \"left!important\" }} className=\"mb-0\" >\n\n          <CCard className=\"mb-0\">\n            <CCardBody>\n              <CRow>\n                <CCol sm={5}>\n                  <h4 id=\"traffic\" className=\"card-title mb-0\">\n                    Recent Activity\n                  </h4>\n                  {/* <div className=\"small text-medium-emphasis\">January - July 2021</div> */}\n                </CCol>\n              </CRow>\n\n              <CChartLine\n                style={{ height: '300px', marginTop: '40px' }}\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      label: 'My First dataset',\n                      backgroundColor: hexToRgba(getStyle('--cui-info'), 10),\n                      borderColor: getStyle('--cui-info'),\n                      pointHoverBackgroundColor: getStyle('--cui-info'),\n                      borderWidth: 2,\n                      data: [\n                        random(50, 200),\n                        random(50, 200),\n                        random(50, 200),\n                        random(50, 200),\n                        random(50, 200),\n                        random(50, 200),\n                        random(50, 200),\n                      ],\n                      fill: true,\n                    },\n                    {\n                      label: 'My Second dataset',\n                      backgroundColor: 'transparent',\n                      borderColor: getStyle('--cui-success'),\n                      pointHoverBackgroundColor: getStyle('--cui-success'),\n                      borderWidth: 2,\n                      data: [\n                        random(50, 200),\n                        random(50, 200),\n                        random(50, 200),\n                        random(50, 200),\n                        random(50, 200),\n                        random(50, 200),\n                        random(50, 200),\n                      ],\n                    },\n                    {\n                      label: 'My Third dataset',\n                      backgroundColor: 'transparent',\n                      borderColor: getStyle('--cui-danger'),\n                      pointHoverBackgroundColor: getStyle('--cui-danger'),\n                      borderWidth: 1,\n                      borderDash: [8, 5],\n                      data: [65, 65, 65, 65, 65, 65, 65],\n                    },\n                  ],\n                }}\n                options={{\n                  maintainAspectRatio: false,\n                  plugins: {\n                    legend: {\n                      display: false,\n                    },\n                  },\n                  scales: {\n                    x: {\n                      grid: {\n                        drawOnChartArea: false,\n                      },\n                    },\n                    y: {\n                      ticks: {\n                        beginAtZero: true,\n                        maxTicksLimit: 5,\n                        stepSize: Math.ceil(250 / 5),\n                        max: 250,\n                      },\n                    },\n                  },\n                  elements: {\n                    line: {\n                      tension: 0.4,\n                    },\n                    point: {\n                      radius: 0,\n                      hitRadius: 10,\n                      hoverRadius: 4,\n                      hoverBorderWidth: 3,\n                    },\n                  },\n                }}\n              />\n            </CCardBody>\n            <CCardFooter>\n              <CRow xs={{ cols: 1 }} md={{ cols: 4 }} className=\"text-center\">\n                {progressExample.map((item, index) => (\n                  <CCol className=\"mb-sm-6 mb-3\" key={index}>\n                    <div className=\"text-medium-emphasis\">{item.title}</div>\n                    <strong>\n                      {item.value} ({item.percent}%)\n                    </strong>\n                    <CProgress thin className=\"mt-2\" color={item.color} value={item.percent} />\n                  </CCol>\n                ))}\n              </CRow>\n            </CCardFooter>\n          </CCard>\n          {/* <Datatable transactionDetails={transactionDetails} /> */}\n        </CCol>\n\n        <CCol xs={12} sm={12} md={3} xl={3} style={{ float: \"right\" }}>\n          <CCard className=\"mb-4\">\n            <CCardHeader> Quick Overview </CCardHeader>\n          </CCard>\n          {/* <div style={{ height: \"69em\", \"overflowY\": \"auto\", whiteSpace: \"nowrap\" }}> */}\n\n          <div style={{\"overflowY\": \"auto\", whiteSpace: \"nowrap\" }}>\n            {/*  */}\n\n            <CCard className=\"mb-4\">\n              <CCardBody>\n                <div className=\"border-start border-start-4 border-start-primary py-1 px-3\">\n                  <div className=\"text-medium-emphasis small\"> Institutions/Colleges</div>\n                  <div className=\"fs-5 fw-semibold\">\n                    {summaryDetails?.currency} {summaryDetails?.todays_collections_amount || 0.00}\n                  </div>\n                  <div className=\"text-medium-emphasis small\"> Application {summaryDetails?.todays_collections_count || 0}</div>\n                </div>\n              </CCardBody>\n            </CCard>\n\n            {/* <CCard className=\"mb-4\">\n              <CCardBody>\n                <div className=\"border-start border-start-4 border-start-danger py-1 px-3\">\n                  <div className=\"text-medium-emphasis small\">LAST PAYOUT</div>\n                  <div className=\"fs-5 fw-semibold\">\n                    {summaryDetails?.currency} {summaryDetails?.last_payout_amount || 0.00}\n                  </div>\n                  <div className=\"text-medium-emphasis small\">COUNT {summaryDetails?.last_payout_count || 0}</div>\n                  <div className=\"text-medium-emphasis small\"> {moment(summaryDetails?.last_payout_date || new Date()).format(\"MMM Do YYYY\")}</div>\n\n                </div>\n              </CCardBody>\n            </CCard>\n            <CCard className=\"mb-4\">\n              <CCardBody>\n                <div className=\"border-start border-start-4 border-start-warning py-1 px-3\">\n                  <div className=\"text-medium-emphasis small\">NEXT PAYOUT</div>\n                  <div className=\"fs-5 fw-semibold\">\n                    {summaryDetails?.currency} {summaryDetails?.next_payout_amount || 0.00}\n                  </div>\n                  <div className=\"text-medium-emphasis small\">COUNT {summaryDetails?.next_payout_count || 0}</div>\n                  <div className=\"text-medium-emphasis small\"> {moment(summaryDetails?.next_payout_date || new Date()).format(\"MMM Do YYYY\")}</div>\n                </div>\n              </CCardBody>\n            </CCard> */}\n\n          </div>\n\n          {/* <hr className=\"mt-0\" /> */}\n        </CCol>\n\n        <CCol xs className='mt-5'>\n          <CCard className=\"mb-4\">\n            <CCardHeader> {' & '} Sales</CCardHeader>\n            <CCardBody>\n\n              <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\n                <CTableHead color=\"light\">\n                  <CTableRow>\n                    <CTableHeaderCell className=\"text-center\">\n                      <CIcon icon={cilPeople} />\n                    </CTableHeaderCell>\n                    <CTableHeaderCell>User</CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\">Country</CTableHeaderCell>\n                    <CTableHeaderCell>Usage</CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\">Payment Method</CTableHeaderCell>\n                    <CTableHeaderCell>Activity</CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                  {tableExample.map((item, index) => (\n                    <CTableRow v-for=\"item in tableItems\" key={index}>\n                      <CTableDataCell className=\"text-center\">\n                        <CAvatar size=\"md\" src={item.avatar.src} status={item.avatar.status} />\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div>{item.user.name}</div>\n                        <div className=\"small text-medium-emphasis\">\n                          <span>{item.user.new ? 'New' : 'Recurring'}</span> | Registered:{' '}\n                          {item.user.registered}\n                        </div>\n                      </CTableDataCell>\n                      <CTableDataCell className=\"text-center\">\n                        <CIcon size=\"xl\" icon={item.country.flag} title={item.country.name} />\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div className=\"clearfix\">\n                          <div className=\"float-start\">\n                            <strong>{item.usage.value}%</strong>\n                          </div>\n                          <div className=\"float-end\">\n                            <small className=\"text-medium-emphasis\">{item.usage.period}</small>\n                          </div>\n                        </div>\n                        <CProgress thin color={item.usage.color} value={item.usage.value} />\n                      </CTableDataCell>\n                      <CTableDataCell className=\"text-center\">\n                        <CIcon size=\"xl\" icon={item.payment.icon} />\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div className=\"small text-medium-emphasis\">Last login</div>\n                        <strong>{item.activity}</strong>\n                      </CTableDataCell>\n                    </CTableRow>\n                  ))}\n                </CTableBody>\n              </CTable>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow> \n    </>\n  )\n}\n\nexport default Dashboard\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport { CBadge } from '@coreui/react';\nimport HomeIcon from '@mui/icons-material/Home';\nimport moment from 'moment';\nimport { Col, Row } from 'reactstrap';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'left',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function ViewDetails(post) {\n    // // console.log(\"viewData \", post?.viewData?.device_info)\n  return (\n    <Box style={{ width: '90%', margin: '0px 10px' }}>\n        {/* <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}> */}\n\n        <Row className='mt-1 mb-0 d-flex'>\n            <Col sm=\"4\" xm=\"4\" md=\"4\" lg=\"4\" xl=\"4\">\n                <a style={{ color: \"#000\" }}>\n                    <p className=\"\">Reference ID </p>\n                </a>\n            </Col>\n            <Col sm=\"4\"></Col>\n            <Col sm=\"4\">\n                <a style={{ color: \"#000\" }}>\n                    {post?.viewData?.reference_id}\n                </a>\n            </Col>\n            <hr />\n        </Row>         \n        <Row className='mb-0 d-flex'>\n            <Col sm=\"4\" xm=\"4\" md=\"4\" lg=\"4\" xl=\"4\">\n                <a style={{ color: \"#000\" }}>\n                    <p className=\"\">Amount</p>\n                </a>\n            </Col>\n            <Col sm=\"4\"></Col>\n            <Col sm=\"4\">\n                <a style={{ color: \"#000\" }}>\n                   {post?.viewData?.currency} {\" \"} {post?.viewData?.amount}\n                </a>\n            </Col>\n            <hr />\n        </Row>      \n        <Row className='mb-0 d-flex'>\n            <Col sm=\"4\" xm=\"4\" md=\"4\" lg=\"4\" xl=\"4\">\n                <a style={{ color: \"#000\" }}>\n                    <p className=\"\">Service Type</p>\n                </a>\n            </Col>\n            <Col sm=\"4\"></Col>\n            <Col sm=\"4\">\n                <a style={{ color: \"#000\" }}>\n                    { post?.viewData?.service === 1 ? \"COLLEAGELEAGUE TO COLLEAGELEAGUE\" : \"\" } \n                    { post?.viewData?.service === 2 ? \"COLLEAGELEAGUE TO MTN\" : \"\" }\n                    { post?.viewData?.service === 3 ? \"COLLEAGELEAGUE TO VODAFONE\" : \"\" }\n                    { post?.viewData?.service === 4 ? \"COLLEAGELEAGUE TO AIRTELTIGO\" : \"\" }\n                    { post?.viewData?.service === 5 ? \"MTN TO COLLEAGELEAGUE\" : \"\" }\n                    { post?.viewData?.service === 6 ? \"VODAFONE TO COLLEAGELEAGUE\" : \"\" }\n                    { post?.viewData?.service === 7 ? \"AIRTELTIGO TO COLLEAGELEAGUE\" : \"\" }\n                    { post?.viewData?.service === 8 ? \"COLLEAGELEAGUE TO AGENT\" : \"\" }\n                    { [1, 2, 3, 4, 5, 6, 7, 8].includes(post?.viewData?.service) ? \"\" : \"None\" }\n                </a>\n            </Col>\n            <hr />\n        </Row>        \n        <Row className='mb-0 d-flex'>\n            <Col sm=\"4\" xm=\"4\" md=\"4\" lg=\"4\" xl=\"4\">\n                <a style={{ color: \"#000\" }}>\n                    <p className=\"\">Note</p>\n                </a>\n            </Col>\n            <Col sm=\"4\"></Col>\n            <Col sm=\"4\">\n                <a style={{ color: \"#000\" }}>\n                    {post?.viewData?.note}\n                </a>\n            </Col>\n            <hr />\n        </Row>     \n        <Row className='mb-0 d-flex'>\n            <Col sm=\"4\" xm=\"4\" md=\"4\" lg=\"4\" xl=\"4\">\n                <a style={{ color: \"#000\" }}>\n                    <p className=\"\"> Status Message </p>\n                </a>\n            </Col>\n            <Col sm=\"4\"></Col>\n            <Col sm=\"4\">\n                <a style={{ color: \"#000\" }}>\n                    {post?.viewData?.status_message}\n                </a>\n            </Col>\n            <hr />\n        </Row>     \n        <Row className='mb-0 d-flex'>\n            <Col sm=\"4\" xm=\"4\" md=\"4\" lg=\"4\" xl=\"4\">\n                <a style={{ color: \"#000\" }}>\n                    <p className=\"\"> Status </p>\n                </a>\n            </Col>\n            <Col sm=\"4\"></Col>\n            <Col sm=\"4\">\n                <a style={{ color: \"#000\" }}>\n                    <CBadge color= {post?.viewData?.status_code === \"SUCCESSFUL\" ? \"success\" : (post?.viewData?.status_code === \"PENDING\" ? \"primary\" : (post.viewData.status_code === \"REVERSED\" ? \"danger\" : \"secondary\") )}>{post?.viewData?.status_code}</CBadge>\n                </a>\n            </Col>\n            <hr />\n        </Row>  \n        <Row className='mb-0 d-flex'>\n            <Col sm=\"4\" xm=\"4\" md=\"4\" lg=\"4\" xl=\"4\">\n                <a style={{ color: \"#000\" }}>\n                    <p className=\"\"> Transaction Date </p>\n                </a>\n            </Col>\n            <Col sm=\"4\"></Col>\n            <Col sm=\"4\">\n                <a style={{ color: \"#000\" }}>\n                    {moment(post?.viewData?.created_at).format('LLLL')}\n                </a>\n            </Col>\n            <hr />\n        </Row>  \n        <Row className='mb-0 d-flex'>\n            <Col sm=\"4\" xm=\"2\" md=\"2\" lg=\"2\" xl=\"2\">\n                <a style={{ color: \"#000\" }}>\n                    {/* <p className=\"\"> Device Info. </p> */}\n                </a>\n            </Col>\n            <Col sm=\"8\" className='ml-120'>\n                <p style={{ color: \"#000\", textAlign: \"center\" }} >\n                    <b>Device Info. </b> <br />\n\n                    {post?.viewData?.device_info[\"X-Real-Ip\"]}\n                    <br />\n                    {post?.viewData?.device_info[\"User-Agent\"]}\n                </p>\n\n            </Col>\n            <Col sm=\"2\">\n            </Col>\n            {/* <hr /> */}\n        </Row> \n        \n\n    </Box>\n  );\n}\n","import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CDropdown,\n  CDropdownMenu,\n  CDropdownItem,\n  CDropdownToggle,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\nimport CIcon from '@coreui/icons-react'\nimport { cilArrowBottom, cilArrowTop, cilOptions } from '@coreui/icons'\n\nconst WidgetsDropdown = () => {\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"secondary\"\n          value={\n            <>\n              GHS 269{' '}\n              <span className=\"fs-6 fw-normal\">\n                <CIcon icon={cilArrowTop} />\n              </span> \n              <div className=\"fs-6 fw-normal\">\n                COUNT <b>{\"90\"}</b>\n              </div> \n              \n            </>\n          }\n          title={\"TOTAL TRANSACTION\"}\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              {/* <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu> */}\n            </CDropdown>\n          }\n          // chart={\n          //   <CChartLine\n          //     className=\"mt-3 mx-3\"\n          //     style={{ height: '70px' }}\n          //     data={{\n          //       labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n          //       datasets: [\n          //         {\n          //           label: 'My First dataset',\n          //           backgroundColor: 'transparent',\n          //           borderColor: 'rgba(255,255,255,.55)',\n          //           pointBackgroundColor: getStyle('--cui-primary'),\n          //           data: [65, 59, 84, 84, 51, 55, 40],\n          //         },\n          //       ],\n          //     }}\n          //     options={{\n          //       plugins: {\n          //         legend: {\n          //           display: false,\n          //         },\n          //       },\n          //       maintainAspectRatio: false,\n          //       scales: {\n          //         x: {\n          //           grid: {\n          //             display: false,\n          //             drawBorder: false,\n          //           },\n          //           ticks: {\n          //             display: false,\n          //           },\n          //         },\n          //         y: {\n          //           min: 30,\n          //           max: 89,\n          //           display: false,\n          //           grid: {\n          //             display: false,\n          //           },\n          //           ticks: {\n          //             display: false,\n          //           },\n          //         },\n          //       },\n          //       elements: {\n          //         line: {\n          //           borderWidth: 1,\n          //           tension: 0.4,\n          //         },\n          //         point: {\n          //           radius: 4,\n          //           hitRadius: 10,\n          //           hoverRadius: 4,\n          //         },\n          //       },\n          //     }}\n          //   />\n          // }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"primary\"\n          value={\n            <>\n              GHS 6.200{' '}\n              <span className=\"fs-6 fw-normal\">\n                <CIcon icon={cilArrowTop} />\n              </span>\n              <div className=\"fs-6 fw-normal\">\n                COUNT <b>{\"90\"}</b>\n              </div> \n            </>\n          }\n          title=\"COLLEAGELEAGUE TO COLLEAGELEAGUE\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              {/* <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu> */}\n            </CDropdown>\n          }\n          // chart={\n          //   <CChartLine\n          //     className=\"mt-3 mx-3\"\n          //     style={{ height: '70px' }}\n          //     data={{\n          //       labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n          //       datasets: [\n          //         {\n          //           label: 'My First dataset',\n          //           backgroundColor: 'transparent',\n          //           borderColor: 'rgba(255,255,255,.55)',\n          //           pointBackgroundColor: getStyle('--cui-info'),\n          //           data: [1, 18, 9, 17, 34, 22, 11],\n          //         },\n          //       ],\n          //     }}\n          //     options={{\n          //       plugins: {\n          //         legend: {\n          //           display: false,\n          //         },\n          //       },\n          //       maintainAspectRatio: false,\n          //       scales: {\n          //         x: {\n          //           grid: {\n          //             display: false,\n          //             drawBorder: false,\n          //           },\n          //           ticks: {\n          //             display: false,\n          //           },\n          //         },\n          //         y: {\n          //           min: -9,\n          //           max: 39,\n          //           display: false,\n          //           grid: {\n          //             display: false,\n          //           },\n          //           ticks: {\n          //             display: false,\n          //           },\n          //         },\n          //       },\n          //       elements: {\n          //         line: {\n          //           borderWidth: 1,\n          //         },\n          //         point: {\n          //           radius: 4,\n          //           hitRadius: 10,\n          //           hoverRadius: 4,\n          //         },\n          //       },\n          //     }}\n          //   />\n          // }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"warning\"\n          value={\n            <>\n              GHS 2.49{' '}\n              <span className=\"fs-6 fw-normal\">\n                <CIcon icon={cilArrowTop} />\n              </span>\n              <div className=\"fs-6 fw-normal\">\n                COUNT <b>{\"90\"}</b>\n              </div> \n            </>\n          }\n          title=\"COLLEAGELEAGUE TO MTN\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              {/* <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu> */}\n            </CDropdown>\n          }\n          // chart={\n          //   <CChartLine\n          //     className=\"mt-3\"\n          //     style={{ height: '70px' }}\n          //     data={{\n          //       labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n          //       datasets: [\n          //         {\n          //           label: 'My First dataset',\n          //           backgroundColor: 'rgba(255,255,255,.2)',\n          //           borderColor: 'rgba(255,255,255,.55)',\n          //           data: [78, 81, 80, 45, 34, 12, 40],\n          //           fill: true,\n          //         },\n          //       ],\n          //     }}\n          //     options={{\n          //       plugins: {\n          //         legend: {\n          //           display: false,\n          //         },\n          //       },\n          //       maintainAspectRatio: false,\n          //       scales: {\n          //         x: {\n          //           display: false,\n          //         },\n          //         y: {\n          //           display: false,\n          //         },\n          //       },\n          //       elements: {\n          //         line: {\n          //           borderWidth: 2,\n          //           tension: 0.4,\n          //         },\n          //         point: {\n          //           radius: 0,\n          //           hitRadius: 10,\n          //           hoverRadius: 4,\n          //         },\n          //       },\n          //     }}\n          //   />\n          // }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"danger\"\n          value={\n            <>\n              GHS 4,400{' '}\n              <span className=\"fs-6 fw-normal\">\n                <CIcon icon={cilArrowTop} />\n              </span>\n              <div className=\"fs-6 fw-normal\">\n                COUNT <b>{\"90\"}</b>\n              </div> \n            </>\n          }\n          title=\"COLLEAGELEAGUE TO VODAFONE\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              {/* <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu> */}\n            </CDropdown>\n          }\n          // chart={\n          //   <CChartBar\n          //     className=\"mt-3 mx-3\"\n          //     style={{ height: '70px' }}\n          //     data={{\n          //       labels: [\n          //         'January',\n          //         'February',\n          //         'March',\n          //         'April',\n          //         'May',\n          //         'June',\n          //         'July',\n          //         'August',\n          //         'September',\n          //         'October',\n          //         'November',\n          //         'December',\n          //         'January',\n          //         'February',\n          //         'March',\n          //         'April',\n          //       ],\n          //       datasets: [\n          //         {\n          //           label: 'My First dataset',\n          //           backgroundColor: 'rgba(255,255,255,.2)',\n          //           borderColor: 'rgba(255,255,255,.55)',\n          //           data: [78, 81, 80, 45, 34, 12, 40, 85, 65, 23, 12, 98, 34, 84, 67, 82],\n          //           barPercentage: 0.6,\n          //         },\n          //       ],\n          //     }}\n          //     options={{\n          //       maintainAspectRatio: false,\n          //       plugins: {\n          //         legend: {\n          //           display: false,\n          //         },\n          //       },\n          //       scales: {\n          //         x: {\n          //           grid: {\n          //             display: false,\n          //             drawTicks: false,\n          //           },\n          //           ticks: {\n          //             display: false,\n          //           },\n          //         },\n          //         y: {\n          //           grid: {\n          //             display: false,\n          //             drawBorder: false,\n          //             drawTicks: false,\n          //           },\n          //           ticks: {\n          //             display: false,\n          //           },\n          //         },\n          //       },\n          //     }}\n          //   />\n          // }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown\n"],"names":["userData","JSON","parse","localStorage","getItem","getSessionTimeout","x","setInterval","currentUser_new","now","Date","getTime","distance","timeLogout","seconds","Math","floor","Swal","icon","title","toast","position","showConfirmButton","timer","timerProgressBar","closeOnConfirm","clearInterval","setTimeout","window","location","href","clear","error","getTransactionData","config_transaction","method","url","process","account","headers","access","data","config_transaction_summary_client","axios","then","response","status","catch","request","transactionData","_transactionData$tran","transaction","value","_useState","useState","_useState2","_slicedToArray","setTransactionDetails","_useState3","_useState4","summaryDetails","setSummaryDetails","useEffect","_summaryData$summary","trackActivity","summaryData","summary","random","min","max","tableExample","cilUser","cilUserFemale","cibGoogle","cibFacebook","cibTwitter","cibLinkedin","avatar","src","avatar1","user","name","new","registered","country","flag","cifUs","usage","period","color","payment","cibCcMastercard","activity","avatar2","cifBr","cibCcVisa","avatar3","cifIn","cibCcStripe","avatar4","cifFr","cibCcPaypal","avatar5","cifEs","cibCcApplePay","avatar6","cifPl","cibCcAmex","counter","setItem","stringify","onclick","event","_jsx","_Fragment","children","_jsxs","CRow","className","style","width","CCol","xs","sm","md","xl","float","CCard","CCardBody","id","CChartLine","height","marginTop","labels","datasets","label","backgroundColor","hexToRgba","getStyle","borderColor","pointHoverBackgroundColor","borderWidth","fill","borderDash","options","maintainAspectRatio","plugins","legend","display","scales","grid","drawOnChartArea","y","ticks","beginAtZero","maxTicksLimit","stepSize","ceil","elements","line","tension","point","radius","hitRadius","hoverRadius","hoverBorderWidth","CCardFooter","cols","percent","map","item","index","CProgress","thin","CCardHeader","whiteSpace","currency","todays_collections_amount","todays_collections_count","CTable","align","hover","responsive","CTableHead","CTableRow","CTableHeaderCell","CIcon","cilPeople","CTableBody","CTableDataCell","CAvatar","size","styled","Paper","_ref","theme","_objectSpread","palette","mode","typography","body2","padding","spacing","textAlign","text","secondary","lg","CWidgetStatsA","cilArrowTop","action","CDropdown","alignment","CDropdownToggle","caret","cilOptions"],"sourceRoot":""}